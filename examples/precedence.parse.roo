procedure parens ()
{
    n <- (a * b) + c;
    n <- (a / b) + c;
    n <- (a + b) + c;
    n <- (a - b) + c;
    n <- (a * b) - c;
    n <- (a / b) - c;
    n <- (a + b) - c;
    n <- (a - b) - c;
    n <- (a * b) * c;
    n <- (a / b) * c;
    y <- (a + b) * c;
    y <- (a - b) * c;
    n <- (a * b) / c;
    n <- (a / b) / c;
    y <- (a + b) / c;
    y <- (a - b) / c;

    y <- a * (b + c);
    y <- a / (b + c);
    n <- a + (b + c);
    y <- a - (b + c);
    y <- a * (b - c);
    y <- a / (b - c);
    n <- a + (b - c);
    y <- a - (b - c);
    n <- a * (b * c);
    y <- a / (b * c);
    n <- a + (b * c);
    n <- a - (b * c);
    y <- a * (b / c);
    y <- a / (b / c);
    n <- a + (b / c);
    n <- a - (b / c);

    y <- --(a + b);
    n <- -(-a) + b;

    y <- (a = b) = c;
    y <- a = (b = c);

    n <- (not a) and b;
    y <- not (a and b);
    n <- (not a) or b;
    y <- not (a or b);
    n <- a and (not b);
    n <- a or (not b);

    n <- not (1 < 2);
    n <- not (1 > 2);

    y <- (not a) = b;
    n <- not a = b;

    n <- a = (not b);
    n <- a = not b;

    n <- not not true = not false;
    n <- not (not (true = (not false)));
    n <- not not true and not false;
    n <- (not not true) and (not false);
    n <- not 1 + not 2 and 3;
    n <- (not (1 + (not 2))) and 3;

    y <- a = (b < x);
    y <- a = ((a = b) < x);
}

procedure main ()
{
    a <- not 1 < 2;
    a <- a<-1;
    b <- true = not false;
    bool <- true and (5 or 3 = 2 and (not (-never)));
}
